/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package interfaz.internalFrames;

import datos.usuario;
import interfaz.fContra;
import interfaz.fMain;
import java.io.File;
import java.io.FilenameFilter;
import javax.swing.JFrame;
import logica.admin;
import logica.config;

/**
 *
 * @author derek
 */
public class fPermisos extends javax.swing.JInternalFrame {

    /**
     * Creates new form fPermisos
     */
    public fPermisos() {
        initComponents();
        cargar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbUsuarios = new javax.swing.JComboBox<>();
        chbTrabajador = new javax.swing.JCheckBox();
        cmbOpciones = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setTitle("Permisos de usuarios");

        jLabel1.setText("Usuario:");

        cmbUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUsuariosActionPerformed(evt);
            }
        });

        chbTrabajador.setText("Trabajador");
        chbTrabajador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbTrabajadorActionPerformed(evt);
            }
        });

        cmbOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MÃ¡s opciones", "Iniciar sesion", "Eliminar" }));
        cmbOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOpcionesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbUsuarios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chbTrabajador)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbTrabajador)
                    .addComponent(cmbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUsuariosActionPerformed
        mostrarPermisos();
    }//GEN-LAST:event_cmbUsuariosActionPerformed

    private void chbTrabajadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbTrabajadorActionPerformed
        new admin().setAdmin(cmbUsuarios.getSelectedItem().toString(), chbTrabajador.isSelected());
        mostrarPermisos();
    }//GEN-LAST:event_chbTrabajadorActionPerformed

    private void cmbOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOpcionesActionPerformed
        try {
            String usuario = cmbUsuarios.getSelectedItem().toString();
            String contra = "";
            switch (cmbOpciones.getSelectedIndex()) {
                case 1:
                    fContra frmContra = new fContra(null, usuario);
                    frmContra.setVisible(true);
                    contra = frmContra.getContra();
                    if (!contra.equals("")) {
                        usuario usu = new usuario();
                        if (usu.login(this, usuario, contra)) {
                            new fMain(usu, true).setVisible(true);
                        }
                    }
                    break;
                case 2:
                    fContra frmContra1 = new fContra(null, "admin");
                    frmContra1.setVisible(true);
                    contra = frmContra1.getContra();
                    if (!contra.equals("")) {
                        usuario usu = new usuario();
                        if (usu.login(this, "admin", contra)) {
                            usu.eliminar(usuario);
                        }
                    }
                    cargar();
                    break;
            }
        } catch (Exception e) {
        }
        cmbOpciones.setSelectedIndex(0);
    }//GEN-LAST:event_cmbOpcionesActionPerformed

    void mostrarPermisos(){
        chbTrabajador.setSelected(new admin().isAdmin(cmbUsuarios.getSelectedItem().toString()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chbTrabajador;
    private javax.swing.JComboBox<String> cmbOpciones;
    private javax.swing.JComboBox<String> cmbUsuarios;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private void cargar() {
        cmbUsuarios.removeAllItems();
        File f = new File(new config().getDir() + "/" + "usuarios/");
        FilenameFilter filter = new FilenameFilter() {
            @Override
            public boolean accept(File f, String name) {
                return true;
            }
        };
        String[] usuarios = f.list(filter);
        for (int i = 0; i < usuarios.length; i++) {
            cmbUsuarios.addItem(usuarios[i]);
        }
    }
}
